/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newgui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;
import jxl.write.Label;
import static newgui.ExcelWrite.AF_description1;
import org.graphstream.graph.Graph;
import org.graphstream.graph.Node;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.swingViewer.ViewPanel;
import org.graphstream.ui.view.View;
import org.graphstream.ui.view.Viewer;
import org.graphstream.ui.view.ViewerListener;
import org.graphstream.ui.view.ViewerPipe;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Admin
 */
public class Home extends javax.swing.JFrame {

    public static String FileLocationData;
    public static String FileLocationDis;
    public static String FileLocationCFG;

    public static ArrayList Alternativeflow = new ArrayList<>();
    public static ArrayList AF_description = new ArrayList<>();
    public static ArrayList altREF = new ArrayList<>();
    public static ArrayList altRefIN = new ArrayList<>();
    public static ArrayList altRefOut = new ArrayList<>();

    public static ArrayList Mainflow = new ArrayList<>();
    ArrayList Normalflow = new ArrayList<>();
    ArrayList Alternative = new ArrayList<>();
    ArrayList Exception = new ArrayList<>();
    ArrayList Testcase = new ArrayList<>();
    ArrayList Scenario = new ArrayList<>();

    public static ArrayList MF_description = new ArrayList<>();

    public static ArrayList Exceptionflow = new ArrayList<>();
    public static ArrayList EF_description = new ArrayList<>();
    public static ArrayList extREF = new ArrayList<>();
    public static ArrayList extRefOut = new ArrayList<>();

    public static ArrayList ScenarioID = new ArrayList<>();
    public static ArrayList Flow = new ArrayList<>();

    public static ArrayList CoditionRange = new ArrayList<>();
    public static ArrayList CoditionID = new ArrayList<>();
    public static ArrayList CoditionOrdinal = new ArrayList<>();
    public static ArrayList Action = new ArrayList<>();
    public static ArrayList ActionID = new ArrayList<>();
    public static ArrayList RandomMatch = new ArrayList<>();
    public static ArrayList Varname = new ArrayList<>();

    public static int minTest;
    public static int maxTest;

    public static ArrayList ucID = new ArrayList<>();
    public static ArrayList ucName = new ArrayList<>();

    public ArrayList InputVarName = new ArrayList<>();

    ArrayList tableColumname = new ArrayList<>();
    ArrayList Columname = new ArrayList<>();
    ArrayList countTestcase = new ArrayList<>();

    ExcelWrite excelW = new ExcelWrite();

    /**
     * no Creates new form Home
     */
    public Home() {
        initComponents();
        setColor(btn_1);
        ind_1.setOpaque(true);
        resetColor(new JPanel[]{btn_2, btn_3, btn_4, btn_6, btn_7, btn_8}, new JPanel[]{ind_2, ind_3, ind_4, ind_6, ind_7, ind_8});

        basicPanel.removeAll();
        basicPanel.repaint();
        basicPanel.validate();
        basicPanel.add(jPanel3);
        basicPanel.repaint();
        basicPanel.validate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        side_pane = new javax.swing.JPanel();
        btn_1 = new javax.swing.JPanel();
        ind_1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btn_2 = new javax.swing.JPanel();
        ind_2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btn_3 = new javax.swing.JPanel();
        ind_3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btn_4 = new javax.swing.JPanel();
        ind_4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_6 = new javax.swing.JPanel();
        ind_6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        btn_7 = new javax.swing.JPanel();
        ind_7 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        btn_8 = new javax.swing.JPanel();
        ind_8 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        basicPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        matrixSupport = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtArea_Partition = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jPanel11.setBackground(new java.awt.Color(35, 144, 35));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 500, 40));

        jLabel19.setBackground(new java.awt.Color(25, 102, 25));
        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Choose...");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel19.setOpaque(true);
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        jPanel11.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, 120, 40));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        side_pane.setBackground(new java.awt.Color(23, 35, 51));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_1.setBackground(new java.awt.Color(23, 35, 51));
        btn_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_1MousePressed(evt);
            }
        });

        ind_1.setOpaque(false);
        ind_1.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_1Layout = new javax.swing.GroupLayout(ind_1);
        ind_1.setLayout(ind_1Layout);
        ind_1Layout.setHorizontalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_1Layout.setVerticalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Open_25px.png"))); // NOI18N
        jLabel8.setText("Select Files XML");

        javax.swing.GroupLayout btn_1Layout = new javax.swing.GroupLayout(btn_1);
        btn_1.setLayout(btn_1Layout);
        btn_1Layout.setHorizontalGroup(
            btn_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_1Layout.createSequentialGroup()
                .addComponent(ind_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(0, 46, Short.MAX_VALUE))
        );
        btn_1Layout.setVerticalGroup(
            btn_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_1Layout.createSequentialGroup()
                .addComponent(ind_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 180, -1));

        btn_2.setBackground(new java.awt.Color(23, 35, 51));
        btn_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_2MouseReleased(evt);
            }
        });

        ind_2.setOpaque(false);
        ind_2.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_2Layout = new javax.swing.GroupLayout(ind_2);
        ind_2.setLayout(ind_2Layout);
        ind_2Layout.setHorizontalGroup(
            ind_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_2Layout.setVerticalGroup(
            ind_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Edit_File_25px.png"))); // NOI18N
        jLabel9.setText("Generate Patition");

        javax.swing.GroupLayout btn_2Layout = new javax.swing.GroupLayout(btn_2);
        btn_2.setLayout(btn_2Layout);
        btn_2Layout.setHorizontalGroup(
            btn_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_2Layout.createSequentialGroup()
                .addComponent(ind_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 38, Short.MAX_VALUE))
        );
        btn_2Layout.setVerticalGroup(
            btn_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_2Layout.createSequentialGroup()
                .addComponent(ind_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 180, 50));

        btn_3.setBackground(new java.awt.Color(23, 35, 51));
        btn_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_3MousePressed(evt);
            }
        });

        ind_3.setOpaque(false);
        ind_3.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_3Layout = new javax.swing.GroupLayout(ind_3);
        ind_3.setLayout(ind_3Layout);
        ind_3Layout.setHorizontalGroup(
            ind_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_3Layout.setVerticalGroup(
            ind_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Test_Passed_25px.png"))); // NOI18N
        jLabel10.setText("Generate Test Case");

        javax.swing.GroupLayout btn_3Layout = new javax.swing.GroupLayout(btn_3);
        btn_3.setLayout(btn_3Layout);
        btn_3Layout.setHorizontalGroup(
            btn_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_3Layout.createSequentialGroup()
                .addComponent(ind_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        btn_3Layout.setVerticalGroup(
            btn_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_3Layout.createSequentialGroup()
                .addComponent(ind_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 180, -1));

        btn_4.setBackground(new java.awt.Color(23, 35, 51));
        btn_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_4MousePressed(evt);
            }
        });

        ind_4.setOpaque(false);
        ind_4.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_4Layout = new javax.swing.GroupLayout(ind_4);
        ind_4.setLayout(ind_4Layout);
        ind_4Layout.setHorizontalGroup(
            ind_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_4Layout.setVerticalGroup(
            ind_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Tree_Structure_25px.png"))); // NOI18N
        jLabel11.setText("View Data Tree Structure");

        javax.swing.GroupLayout btn_4Layout = new javax.swing.GroupLayout(btn_4);
        btn_4.setLayout(btn_4Layout);
        btn_4Layout.setHorizontalGroup(
            btn_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_4Layout.createSequentialGroup()
                .addComponent(ind_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        btn_4Layout.setVerticalGroup(
            btn_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_4Layout.createSequentialGroup()
                .addComponent(ind_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 180, -1));

        jLabel3.setBackground(new java.awt.Color(23, 35, 51));
        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TESTGEN");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        side_pane.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        btn_6.setBackground(new java.awt.Color(23, 35, 51));
        btn_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_6MousePressed(evt);
            }
        });

        ind_6.setOpaque(false);
        ind_6.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_6Layout = new javax.swing.GroupLayout(ind_6);
        ind_6.setLayout(ind_6Layout);
        ind_6Layout.setHorizontalGroup(
            ind_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_6Layout.setVerticalGroup(
            ind_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Flow_Chart_25px.png"))); // NOI18N
        jLabel13.setText("Generate CFG");

        javax.swing.GroupLayout btn_6Layout = new javax.swing.GroupLayout(btn_6);
        btn_6.setLayout(btn_6Layout);
        btn_6Layout.setHorizontalGroup(
            btn_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_6Layout.createSequentialGroup()
                .addComponent(ind_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(0, 58, Short.MAX_VALUE))
        );
        btn_6Layout.setVerticalGroup(
            btn_6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_6Layout.createSequentialGroup()
                .addComponent(ind_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 180, -1));

        btn_7.setBackground(new java.awt.Color(23, 35, 51));
        btn_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_7MousePressed(evt);
            }
        });

        ind_7.setOpaque(false);
        ind_7.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_7Layout = new javax.swing.GroupLayout(ind_7);
        ind_7.setLayout(ind_7Layout);
        ind_7Layout.setHorizontalGroup(
            ind_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_7Layout.setVerticalGroup(
            ind_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Survey_25px.png"))); // NOI18N
        jLabel23.setText("View Traceability Matrix ");

        javax.swing.GroupLayout btn_7Layout = new javax.swing.GroupLayout(btn_7);
        btn_7.setLayout(btn_7Layout);
        btn_7Layout.setHorizontalGroup(
            btn_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_7Layout.createSequentialGroup()
                .addComponent(ind_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        btn_7Layout.setVerticalGroup(
            btn_7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_7Layout.createSequentialGroup()
                .addComponent(ind_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 470, 180, -1));

        btn_8.setBackground(new java.awt.Color(23, 35, 51));
        btn_8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_8MousePressed(evt);
            }
        });

        ind_8.setOpaque(false);
        ind_8.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_8Layout = new javax.swing.GroupLayout(ind_8);
        ind_8.setLayout(ind_8Layout);
        ind_8Layout.setHorizontalGroup(
            ind_8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_8Layout.setVerticalGroup(
            ind_8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Documents_25px.png"))); // NOI18N
        jLabel28.setText("Generate Test Scenarios");

        javax.swing.GroupLayout btn_8Layout = new javax.swing.GroupLayout(btn_8);
        btn_8.setLayout(btn_8Layout);
        btn_8Layout.setHorizontalGroup(
            btn_8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_8Layout.createSequentialGroup()
                .addComponent(ind_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        btn_8Layout.setVerticalGroup(
            btn_8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_8Layout.createSequentialGroup()
                .addComponent(ind_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btn_8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(btn_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 180, -1));

        getContentPane().add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 660));

        jPanel2.setBackground(new java.awt.Color(0, 53, 102));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Cancel_25px.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(945, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 50));

        jPanel14.setBackground(new java.awt.Color(230, 57, 0));
        jPanel14.setPreferredSize(new java.awt.Dimension(830, 611));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setBackground(new java.awt.Color(179, 45, 0));
        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Control Flow Graph");
        jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel31.setOpaque(true);
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });
        jPanel14.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 7, 288, 51));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        jPanel14.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 800, 460));

        jLabel12.setBackground(new java.awt.Color(179, 45, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Image_25px.png"))); // NOI18N
        jLabel12.setText("Export to Image");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel12.setOpaque(true);
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel14.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 540, 150, 50));

        jPanel5.setBackground(new java.awt.Color(51, 133, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 330, 500));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 330, 500));

        jLabel4.setBackground(new java.awt.Color(51, 133, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("UseCaseDataDic");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 330, 60));

        jLabel5.setBackground(new java.awt.Color(51, 133, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DecisionTree");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 330, 60));

        jPanel3.setBackground(new java.awt.Color(25, 102, 25));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(35, 144, 35));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setBackground(new java.awt.Color(35, 144, 35));
        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("DecisionTree");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, 40));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 490, 40));

        jLabel25.setBackground(new java.awt.Color(25, 102, 25));
        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Open_30px.png"))); // NOI18N
        jLabel25.setText("Open File");
        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel25.setOpaque(true);
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 110, 40));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 810, 120));

        jPanel7.setBackground(new java.awt.Color(35, 144, 35));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setBackground(new java.awt.Color(35, 144, 35));
        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Use Case");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel7.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, 40));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 490, 40));

        jLabel17.setBackground(new java.awt.Color(25, 102, 25));
        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Open_30px.png"))); // NOI18N
        jLabel17.setText("Open File");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel17.setOpaque(true);
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 110, 40));

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 810, 120));

        jPanel9.setBackground(new java.awt.Color(35, 144, 35));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setBackground(new java.awt.Color(35, 144, 35));
        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("UseCaseDataDic");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel21.setOpaque(true);
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        jPanel9.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, 40));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel9.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 490, 40));

        jLabel24.setBackground(new java.awt.Color(25, 102, 25));
        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Open_30px.png"))); // NOI18N
        jLabel24.setText("Open File");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel9.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 110, 40));

        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 810, 120));

        jLabel20.setBackground(new java.awt.Color(25, 102, 25));
        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Files");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel20.setOpaque(true);
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 140, 50));

        jPanel12.setBackground(new java.awt.Color(255, 0, 85));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        jPanel12.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 820, 450));

        jLabel18.setBackground(new java.awt.Color(179, 0, 59));
        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Flow_Chart_25px.png"))); // NOI18N
        jLabel18.setText("Control Flow Graph");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel18.setOpaque(true);
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 540, 162, 51));

        jLabel26.setBackground(new java.awt.Color(179, 0, 59));
        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Microsoft_Excel_25px.png"))); // NOI18N
        jLabel26.setText("Export to Excel");
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel26.setOpaque(true);
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 540, 146, 51));

        jLabel27.setBackground(new java.awt.Color(179, 0, 59));
        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Generate Testcase");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 7, 288, 51));

        jLabel30.setBackground(new java.awt.Color(179, 0, 59));
        jLabel30.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Documents_25px.png"))); // NOI18N
        jLabel30.setText("Match Test Scenario");
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel30.setOpaque(true);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 162, 51));

        jPanel15.setBackground(new java.awt.Color(0, 179, 179));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable2);

        jLabel2.setText("Traceability Matrix tracing ");

        jLabel33.setText("Support");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matrixSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matrixSupport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel15.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 820, 450));

        jLabel32.setBackground(new java.awt.Color(0, 128, 128));
        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Traceability Matrix tracing");
        jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel32.setOpaque(true);
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });
        jPanel15.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 288, 51));

        jPanel17.setBackground(new java.awt.Color(82, 0, 204));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setAlignmentX(1.0F);
        jTable3.setAlignmentY(1.0F);
        jScrollPane5.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        jPanel17.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 820, 450));

        jLabel35.setBackground(new java.awt.Color(61, 0, 153));
        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Acception Test Plan");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel35.setOpaque(true);
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });
        jPanel17.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 7, 288, 51));

        jLabel34.setBackground(new java.awt.Color(61, 0, 153));
        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Flow_Chart_25px.png"))); // NOI18N
        jLabel34.setText("Control Flow Graph");
        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel34.setOpaque(true);
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });
        jPanel17.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 530, 162, 51));

        jLabel29.setBackground(new java.awt.Color(61, 0, 153));
        jLabel29.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Microsoft_Excel_25px.png"))); // NOI18N
        jLabel29.setText("Export to Excel");
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel29.setOpaque(true);
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });
        jPanel17.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, 146, 51));

        jPanel4.setBackground(new java.awt.Color(143, 0, 179));

        jScrollPane1.setBackground(new java.awt.Color(184, 0, 230));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        TxtArea_Partition.setColumns(20);
        TxtArea_Partition.setRows(5);
        jScrollPane2.setViewportView(TxtArea_Partition);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel6);

        jLabel7.setBackground(new java.awt.Color(82, 0, 102));
        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Image_25px.png"))); // NOI18N
        jLabel7.setText("Export to Image");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(82, 0, 102));
        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Settings_25px.png"))); // NOI18N
        jLabel14.setText("Generate ECP");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel14.setOpaque(true);
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(143, 0, 179));
        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Generate Partition");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel16.setOpaque(true);
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout basicPanelLayout = new javax.swing.GroupLayout(basicPanel);
        basicPanel.setLayout(basicPanelLayout);
        basicPanelLayout.setHorizontalGroup(
            basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicPanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 7, Short.MAX_VALUE)))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );
        basicPanelLayout.setVerticalGroup(
            basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicPanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(basicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicPanelLayout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(basicPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 800, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Graph() {

    }

    public void createTable_Matrix() {
        Icon aboutIcon = new ImageIcon("src\\swing\\images\\check.png");
        Scenario.add("S01");
        Scenario.add("S02");
        Scenario.add("S03");
        ucID.add("1");
        ucID.add("1");
        int lines = 2;
        jTable2.setRowHeight(jTable2.getRowHeight() * lines);

        //ECP.Read();
        countTestcase.add("Usecase");
        countTestcase.add("Test Scenario");
        for (int cTestcase = 0; cTestcase < RandomMatch.size(); cTestcase++) {

            countTestcase.add("TC 0" + (cTestcase + 1));
        }

        getContentPane().setLayout(null);

        // Model for Table
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        //model.addColumn(data);

        for (int i = 0; i < countTestcase.size(); i++) {
            model.addColumn("" + countTestcase.get(i));

        }

        for (int j = 0; j < ucID.size(); j++) {
            model.addRow(new Object[0]);
            model.setValueAt("0" + ucID.get(j), j, 0);
            model.setValueAt("S0" + ScenarioID.get(j), j, 1);
            for (int k = 2; k < RandomMatch.size() - 1; k++) {
                if (j < ucID.size() - 1) {

                    model.setValueAt("*", j, k);
                }
            }
            for (int k = 8; k < RandomMatch.size() + 2; k++) {
                if (j == ucID.size() - 1) {

                    model.setValueAt("*", j, k);
                }
            }

        }

        matrixSupport.setText("100" + "%");

    }

    public void createTable_testcase() {

        //PartitionECP partition = new PartitionECP();
        //partition.PatitionECP();
        //partition.Testcase();
        int lines = 2;
        jTable1.setRowHeight(jTable1.getRowHeight() * lines);

        Testcase testcase = new Testcase();
        testcase.Read();

        for (int or = 0; or < 3; or++) {
            CoditionOrdinal.add(CoditionOrdinal.get(0));
            Action.add(Action.get(0));
        }

        getContentPane().setLayout(null);

        // Model for Table
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        for (int i = 0; i < Varname.size(); i++) {
            model.addColumn("" + Varname.get(i));

        }

        //for (int i = 0; i < Varname.size(); i++) {
        for (int j = 0; j < RandomMatch.size(); j++) {
            model.addRow(new Object[0]);
            model.setValueAt(j + 1, j, 0);
            model.setValueAt(RandomMatch.get(j), j, 1);
            model.setValueAt(CoditionOrdinal.get(j), j, 2);
            model.setValueAt(Action.get(j), j, 3);
            model.setValueAt(100 * (j + 1) / RandomMatch.size() + "%", j, 4);
            if (j < RandomMatch.size() - 3) {
                model.setValueAt("Valid input", j, 5);

            } else {
                model.setValueAt("InValid" + " " + Varname.get(1), j, 5);
            }

        }

    }

    public void createTable_scenariosUC() {
        PartitionECP ecp = new PartitionECP();
        ecp.Read();
        String Nflow = "";
        String Aflow = "";
        String Eflow = "";

        int refout = 0;
        int refin = 0;
        int erefout = 0;

        Flow.add("Normal Flow");
        Flow.add("Alternative Flow");
        Flow.add("Exception Flow");

        //add flow to Normalflow
        for (int nf = 0; nf < Mainflow.size() / 2; nf++) {
            Normalflow.add("flow" + nf);
            excelW.NorFlow.add("flow" + nf);
        }

        int lines = 2;
        jTable3.setRowHeight(jTable3.getRowHeight() * lines);

        //add columname
        tableColumname.add("ScenarioID");
        tableColumname.add("Name");
        tableColumname.add("Test steps");
        tableColumname.add("Test cases");
        tableColumname.add("Coverage");
        //setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //setBounds(100, 100, 580, 242);
        getContentPane().setLayout(null);

        // Model for Table
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

        for (int i = 0; i < tableColumname.size(); i++) {
            model.addColumn("" + tableColumname.get(i));

        }

        /*model.addColumn("No");
		model.addColumn("CustomerID");
		model.addColumn("Name");
		model.addColumn("Email");
		model.addColumn("CountryCode");
		model.addColumn("Budget");
		model.addColumn("Used");*/
        // Data Row
        for (int i = 0; i < Flow.size(); i++) {
            model.addRow(new Object[0]);
            model.setValueAt("S0" + ScenarioID.get(i), i, 0);
            //model.setValueAt(Mainflow.get(i) + " (" + MF_description.get(i) + ")", i, 1);

            model.setValueAt(ucName.get(0) + "_" + Flow.get(i), i, 1);

            //
            for (int j = 0; j < altRefOut.size(); j++) {
                if (Mainflow.get(i).equals(altRefOut.get(j))) {
                    // model.setValueAt(Alternativeflow.get(i) + " ( " + altRefIN.get(j) + " )", i, 2);

                }

            }
            for (int j = 0; j < extRefOut.size(); j++) {
                if (Mainflow.get(i).equals(extRefOut.get(j))) {
                    //model.setValueAt(Exceptionflow.get(i), i, 3);
                }

            }
            model.setValueAt(100 * (i + 1) / Flow.size() + "%", i, 4);

        }
        for (int nf = 0; nf < Normalflow.size(); nf++) {
            if (nf < Normalflow.size() - 1) {
                Nflow = Nflow + Normalflow.get(nf) + " -> ";

                //excelW.AlFlow.add(Normalflow.get(nf));
            } else {

                Nflow = Nflow + Normalflow.get(nf);
                //excelW.AlFlow.add(Normalflow.get(nf));
            }

            if (Normalflow.get(nf).equals(altRefIN.get(1))) {
                refin = nf;
            }

            if (Normalflow.get(nf).equals(altRefOut.get(1)) && altRefIN.size() != 0) {
                refout = nf;

                Aflow = Aflow + Normalflow.get(nf) + " -> " + Alternativeflow.get(1) + " -> ";

                excelW.AlFlow.add(Normalflow.get(nf));
                excelW.AlFlow.add(Alternativeflow.get(1));
                
                excelW.AF_description1.add(MF_description.get(nf));
                excelW.AF_description1.add(AF_description.get(0));
            } else if (Normalflow.get(nf).equals(altRefOut.get(1)) && altRefIN.size() == 0) {

                Aflow = Aflow + Normalflow.get(nf) + " -> " + Alternativeflow.get(1);
                excelW.AlFlow.add(Normalflow.get(nf));
                excelW.AF_description1.add(MF_description.get(nf));
            } else if (nf == refin) {
                Aflow = Aflow + Normalflow.get(nf) + " -> ";
                excelW.AlFlow.add(Normalflow.get(nf));
                excelW.AF_description1.add(MF_description.get(nf));
            } else if (nf > refin && nf < Normalflow.size() - 1) {
                Aflow = Aflow + Normalflow.get(nf) + " -> ";
                excelW.AlFlow.add(Normalflow.get(nf));
                excelW.AF_description1.add(MF_description.get(nf));
            } else {
                Aflow = Aflow + Normalflow.get(nf);
                excelW.AlFlow.add(Normalflow.get(nf));
                excelW.AF_description1.add(MF_description.get(nf));
            }

            if (Normalflow.get(nf).equals(extRefOut.get(1))) {
                erefout = nf;

            }
            if (nf < erefout + 1) {

                Eflow = Eflow + Normalflow.get(nf) + " -> ";
                excelW.ExFlow.add(Normalflow.get(nf));
                excelW.EF_description1.add(MF_description.get(nf));
                
            }
            if (Normalflow.get(nf).equals(extRefOut.get(1))) {
                erefout = nf;

                Eflow = Eflow + Exceptionflow.get(1);
                excelW.ExFlow.add(Exceptionflow.get(1));
                excelW.EF_description1.add(EF_description.get(0));
            }

            model.setValueAt(Nflow, 0, 2);
            model.setValueAt(Aflow, 1, 2);
            model.setValueAt(Eflow, 2, 2);
        }

        //model.setValueAt(Alternative.get(0) + " -> " + Alternative.get(1) + " -> " + Alternative.get(2) + " -> " + Alternative.get(3) + " -> " + Alternative.get(4) + " -> " + Alternative.get(5), 1, 2);
        //model.setValueAt(Exception.get(0) + " -> " + Exception.get(1) + " -> " + Exception.get(2), 2, 2);
        if (Testcase.size() == 0) {
            model.setValueAt("Null", 0, 3);
            model.setValueAt("Null", 1, 3);
            model.setValueAt("Null", 2, 3);

        }
        //System.out.println(ColumName);
    }


    private void btn_1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_1MousePressed

        setColor(btn_1);
        ind_1.setOpaque(true);
        resetColor(new JPanel[]{btn_2, btn_3, btn_4, btn_6, btn_7, btn_8}, new JPanel[]{ind_2, ind_3, ind_4, ind_6, ind_7, ind_8});
        basicPanel.removeAll();
        basicPanel.repaint();
        basicPanel.validate();
        basicPanel.add(jPanel3);
        basicPanel.repaint();
        basicPanel.validate();

    }//GEN-LAST:event_btn_1MousePressed

    private void btn_3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_3MousePressed
        // TODO add your handling code here:
        if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            if (RandomMatch.size() == 0) {
                JOptionPane.showMessageDialog(null,
                        "กรุณาสร้างการแบ่งชั้นสมมูล"
                        + "\nไปที่ Generate Partition > Generage ECP",
                        "กรุณาสร้างข้อมูลทดสอบ",
                        JOptionPane.ERROR_MESSAGE);
            } else {

                setColor(btn_3);
                ind_3.setOpaque(true);
                resetColor(new JPanel[]{btn_1, btn_2, btn_4, btn_6, btn_7, btn_8}, new JPanel[]{ind_1, ind_2, ind_4, ind_6, ind_7, ind_8});
                basicPanel.removeAll();
                basicPanel.repaint();
                basicPanel.validate();
                basicPanel.add(jPanel12);
                basicPanel.repaint();
                basicPanel.validate();

                if (jTable1.getRowCount() < 1) {
                    //Testcase testcase = new Testcase();
                    //testcase.runTestcase();
                    createTable_testcase();
                }

            }
        }
    }//GEN-LAST:event_btn_3MousePressed

    private void btn_4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_4MousePressed
        // TODO add your handling code here:

        if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {
            try {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            //DatadicTree tree = new DatadicTree();
            setColor(btn_4);
            ind_4.setOpaque(true);
            resetColor(new JPanel[]{btn_1, btn_2, btn_3, btn_6, btn_7, btn_8}, new JPanel[]{ind_1, ind_2, ind_3, ind_6, ind_7, ind_8});
            basicPanel.removeAll();
            basicPanel.repaint();
            basicPanel.validate();
            basicPanel.add(jPanel5);
            basicPanel.repaint();
            basicPanel.validate();

            if (RandomMatch.size() == 0) {
                /////Create Jtree of UC datadic/////
                DatadicTree treeDatadic = new DatadicTree();
                treeDatadic.Read();
                treeDatadic.setVisible(true);
                treeDatadic.setSize(330, 500);
                jPanel10.removeAll();
                jPanel10.add(treeDatadic);
                jPanel10.setVisible(true);
                jPanel10.repaint();

                /////Create Jtree of Decision/////
                DatadicTree treeDescistion = new DatadicTree();
                treeDescistion.ReadDe();
                treeDescistion.setSize(330, 500);
                treeDescistion.setVisible(true);
                jPanel8.removeAll();
                jPanel8.add(treeDescistion);
                jPanel8.setVisible(true);
                jPanel8.repaint();
            }

        }

    }//GEN-LAST:event_btn_4MousePressed

    private void btn_2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_2MouseReleased
        // TODO add your handling code here:

        if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {
            try {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            setColor(btn_2);
            ind_2.setOpaque(true);
            resetColor(new JPanel[]{btn_1, btn_3, btn_4, btn_6, btn_7, btn_8}, new JPanel[]{ind_1, ind_3, ind_4, ind_6, ind_7, ind_8});
            basicPanel.removeAll();
            basicPanel.repaint();
            basicPanel.validate();
            basicPanel.add(jPanel4);
            basicPanel.repaint();
            basicPanel.validate();
            jLabel14.setText("Generate ECP");

            /////Generage Partition/////
            PartitionECP partition = new PartitionECP();
            partition.Patition();
            //partition.Testcase();

            try {

                FileReader reader = new FileReader("src\\etc\\TestGen_Patition.txt");
                BufferedReader br = new BufferedReader(reader);
                TxtArea_Partition.read(br, null);
                br.close();
                //TxtArea_Partition.requestFocus();
                TxtArea_Partition.setSelectedTextColor(Color.YELLOW);
                //ShowECP.setBackground(Color.red);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btn_2MouseReleased

    int xx, xy;
    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        // TODO add your handling code here:
        //drag this pane
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:

        //source to drag
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked


    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:

        JFileChooser savefile = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("png", "png");

        savefile.setFileFilter(filter);

        int returnVal = savefile.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            try {

                // FileWriter fw = new FileWriter(filter+".xls");
                //FileWriter fw;
                //fw = new FileWriter(savefile.getSelectedFile() + ".xls");
                String fileName = savefile.getSelectedFile() + ".jpg".toString();

                //** Merge Cell ***//*
                // ws1.mergeCells(0, 4, 1, 4); // Merge col[0-1] and row[4]
                //  Label lable = new Label(0, 4,"ThaiCreate.Com", cellFormat2);
                //  ws1.addCell(lable);
                System.out.println("Image file created.");
                JOptionPane.showMessageDialog(null, "Save succeed\n" + fileName);
                /*final ImageIcon icon = new ImageIcon(getClass().getResource("icon.ico"));
                JOptionPane.showMessageDialog(null,
                        "Eggs are not supposed to be green.",
                        "Inane custom dialog",
                        JOptionPane.INFORMATION_MESSAGE,
                
                        icon);*/

                //fw.close();
                BufferedImage img = new BufferedImage(TxtArea_Partition.getWidth(), TxtArea_Partition.getHeight(), BufferedImage.TYPE_INT_RGB);
                Graphics2D g2d = img.createGraphics();
                TxtArea_Partition.printAll(g2d);
                g2d.dispose();

                try {
                    ImageIO.write(img, "png", new File(fileName));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } catch (Exception ex) {
                int n = JOptionPane.showConfirmDialog(
                        null,
                        "Excel file error you want to save?",
                        "Error",
                        JOptionPane.YES_NO_OPTION);

                /*JOptionPane.showMessageDialog(null,
                    "File not save",
                    "Error",
                    JOptionPane.ERROR_MESSAGE );*/
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        PartitionECP partition = new PartitionECP();
        partition.PatitionECP();
        //jLabel14.setText("Generate Partition");

        if (jLabel14.getText().equals("Generate ECP")) {
            jLabel14.setText("Generate Partition");
            partition.Testcase();

            try {

                FileReader reader = new FileReader("src\\etc\\TestGen_ECP.txt");
                BufferedReader br = new BufferedReader(reader);
                TxtArea_Partition.read(br, null);
                br.close();
                TxtArea_Partition.requestFocus();
                TxtArea_Partition.setSelectedTextColor(Color.YELLOW);
                //ShowECP.setBackground(Color.red);
            } catch (Exception e) {
            }
        } else if (jLabel14.getText().equals("Generate Partition")) {
            jLabel14.setText("Generate ECP");
            try {

                FileReader reader = new FileReader("src\\etc\\TestGen_Patition.txt");
                BufferedReader br = new BufferedReader(reader);
                TxtArea_Partition.read(br, null);
                br.close();
                TxtArea_Partition.requestFocus();
                TxtArea_Partition.setSelectedTextColor(Color.YELLOW);
                //ShowECP.setBackground(Color.red);
            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        jTextField2.setText("");
        JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("xml", "xml");
        fileopen.addChoosableFileFilter(filter);

        int ret = fileopen.showDialog(null, "Choose file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            jTextField2.setText(fileopen.getSelectedFile().toString());
            FileLocationCFG = jTextField2.getText();
        }

        System.out.println();
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        jTextField3.setText("");
        JFileChooser fileopen = new JFileChooser();

        FileFilter filter = new FileNameExtensionFilter("xml", "xml");
        fileopen.addChoosableFileFilter(filter);
        int ret = fileopen.showDialog(null, "Choose file");
        if (ret == JFileChooser.APPROVE_OPTION) {
            String fileName = fileopen.getSelectedFile().toString();

            File schemaFile = new File("src\\validate_XML\\FormDatadic.xsd");
            // or File schemaFile = new File("/location/to/xsd"); // etc.
            Source xmlFile = new StreamSource(new File(fileName));
            SchemaFactory schemaFactory = SchemaFactory
                    .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
            try {
                Schema schema = schemaFactory.newSchema(schemaFile);
                Validator validator = schema.newValidator();
                validator.validate(xmlFile);
                jTextField3.setText(fileopen.getSelectedFile().toString());
                FileLocationData = jTextField3.getText();
                System.out.println(xmlFile.getSystemId() + "\n  is valid");

            } catch (SAXException e) {
                String invalidXML = (xmlFile.getSystemId() + "\n  is NOT valid reason:" + e);
                try {
                    UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,
                        "" + e.getMessage(),
                        "รูปแบบไฟล์ไม่ถูกต้อง",
                        JOptionPane.ERROR_MESSAGE);
            } catch (IOException e) {

            }

        }

        System.out.println();
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField4.setText("");
        JFileChooser fileopen = new JFileChooser();

        FileFilter filter = new FileNameExtensionFilter("xml", "xml");
        fileopen.addChoosableFileFilter(filter);
        int ret = fileopen.showDialog(null, "Choose file");
        if (ret == JFileChooser.APPROVE_OPTION) {
            String fileName = fileopen.getSelectedFile().toString();

            File schemaFile = new File("src\\validate_XML\\FormDecisionTree.xsd");
            // or File schemaFile = new File("/location/to/xsd"); // etc.
            Source xmlFile = new StreamSource(new File(fileName));
            SchemaFactory schemaFactory = SchemaFactory
                    .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
            try {
                Schema schema = schemaFactory.newSchema(schemaFile);
                Validator validator = schema.newValidator();
                validator.validate(xmlFile);
                jTextField4.setText(fileopen.getSelectedFile().toString());
                FileLocationDis = jTextField4.getText();
                System.out.println(xmlFile.getSystemId() + "\n  is valid");

            } catch (SAXException e) {
                String invalidXML = (xmlFile.getSystemId() + "\n  is NOT valid reason:" + e);
                try {
                    UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,
                        "" + e.getMessage(),
                        "รูปแบบไฟล์ไม่ถูกต้อง",
                        JOptionPane.ERROR_MESSAGE);
            } catch (IOException e) {

            }

        }
        System.out.println();
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel27MouseClicked

    private void btn_6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_6MousePressed
        // TODO add your handling code here:
        /*if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {
            try {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {*/
        setColor(btn_6);
        ind_6.setOpaque(true);
        resetColor(new JPanel[]{btn_1, btn_3, btn_4, btn_2, btn_7, btn_8}, new JPanel[]{ind_1, ind_3, ind_4, ind_2, ind_7, ind_8});
        basicPanel.removeAll();
        basicPanel.repaint();
        basicPanel.validate();
        basicPanel.add(jPanel14);
        basicPanel.repaint();
        basicPanel.validate();

        if (Mainflow.size() == 0) {

            ArrayList<Integer> ValMax = new ArrayList<>();
            ArrayList<Integer> ValMin = new ArrayList<>();
            ArrayList InputMin = new ArrayList<Integer>();
            ArrayList InputMax = new ArrayList<Integer>();
            ArrayList InputValue = new ArrayList<>();
            ArrayList OutputValue = new ArrayList<>();
            ArrayList Des = new ArrayList<>();
            ArrayList varnameSize = new ArrayList<>();

            ArrayList Mainflow = new ArrayList<>();
            ArrayList MF_description = new ArrayList<>();

            ArrayList Exceptionflow = new ArrayList<>();
            ArrayList EF_description = new ArrayList<>();
            ArrayList extREF = new ArrayList<>();
            ArrayList extRefOut = new ArrayList<>();

            ArrayList Alternativeflow = new ArrayList<>();
            ArrayList AF_description = new ArrayList<>();
            ArrayList altREF = new ArrayList<>();
            ArrayList altRefIN = new ArrayList<>();
            ArrayList altRefOut = new ArrayList<>();

            String b = "              ";
            String c = "            ";
            int IntMin = 0;
            int IntMax = 0;
            int data = 0;
            int randomMin;
            try {

                String testType = "";
                String flowID = "";
                String mainDescription = "";

                String altID = "";
                String altDescription = "";
                String ref_altID = "";
                String altRef_in = "";
                String altRef_out = "";
                String refType = "";

                String extID = "";
                String extDescription = "";
                String ref_extID = "";
                String extRef_out = "";

                String varDes = "";
                String Err = "";

                // TODO Auto-generated method stub
                File fXmlFile = new File(FileLocationCFG);
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                Document doc = dBuilder.parse(fXmlFile);
                doc.getDocumentElement().normalize();
                //System.out.println("Root element :" + doc.getDocumentElement().getNodeName());	

                //access to node "Input"
                NodeList ndMain = doc.getElementsByTagName("flow_of_event");
                NodeList ndAlternative = doc.getElementsByTagName("alternative_flow");
                NodeList ndException = doc.getElementsByTagName("exception_flow");
                NodeList ndRef = doc.getElementsByTagName("ref");

                for (int i = 0; i < ndMain.getLength(); i++) {
                    org.w3c.dom.Node node = ndMain.item(i);
                    if (node.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                        testType = node.getNodeName();
                        NodeList ndInputChild = node.getChildNodes();

                        //access to child nodes of node "Input"
                        for (int j = 0; j < ndInputChild.getLength(); j++) {
                            org.w3c.dom.Node nodeInputChild = ndInputChild.item(j);
                            if (nodeInputChild.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                                org.w3c.dom.Element eElement = (org.w3c.dom.Element) nodeInputChild;

                                if (nodeInputChild.getNodeName() == "value") {
                                    mainDescription = nodeInputChild.getTextContent();
                                    flowID = eElement.getAttribute("flow_id");

                                    MF_description.add(mainDescription);
                                    Mainflow.add(flowID);
                                    //System.out.println("Flow ID : " + flowID);
                                    //System.out.println("Description: " + mainDescription);

                                    //Mainflow.add(varName);
                                }
                            }
                        }
                    }
                }

                for (int i = 0; i < ndAlternative.getLength(); i++) {
                    org.w3c.dom.Node node = ndAlternative.item(i);
                    if (node.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                        testType = node.getNodeName();
                        NodeList ndInputChild = node.getChildNodes();

                        //access to child nodes of node "Input"
                        for (int j = 0; j < ndInputChild.getLength(); j++) {
                            org.w3c.dom.Node nodeInputChild = ndInputChild.item(j);
                            if (nodeInputChild.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                                org.w3c.dom.Element eElement = (org.w3c.dom.Element) nodeInputChild;

                                if (nodeInputChild.getNodeName() == "value") {
                                    altDescription = nodeInputChild.getTextContent();
                                    altID = eElement.getAttribute("alt_id");

                                    AF_description.add(altDescription);
                                    Alternativeflow.add(altID);
                                    // System.out.println("ALT ID : " + altID);
                                    //System.out.println("Description: " + altDescription);
                                    //Mainflow.add(varName);

                                }

                                if (nodeInputChild.getNodeName() == "ref") {

                                    ref_altID = eElement.getAttribute("ref_id");
                                    altREF.add(ref_altID);
                                    // System.out.println("REF: " + ref_altID);

                                }

                                if (nodeInputChild.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                                    NodeList refOutList = eElement.getElementsByTagName("flow-ref_out");
                                    NodeList refInList = eElement.getElementsByTagName("flow-ref_in");
                                    for (int out = 0; out < refOutList.getLength(); out++) {
                                        org.w3c.dom.Node node1 = refOutList.item(out);
                                        if (node1.getNodeType() == node1.ELEMENT_NODE) {
                                            Element refOut = (Element) node1;
                                            altRef_out = refOut.getAttribute("at-step");
                                            altRefOut.add(altRef_out);
                                            // System.out.println("REF OUT: " + altRef_out);
                                        }
                                    }
                                    for (int out = 0; out < refInList.getLength(); out++) {
                                        org.w3c.dom.Node node1 = refInList.item(out);
                                        if (node1.getNodeType() == node1.ELEMENT_NODE) {
                                            Element refOut = (Element) node1;
                                            altRef_in = refOut.getAttribute("at-step");
                                            altRefIN.add(altRef_in);
                                            // System.out.println("REF IN: " + altRef_in);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                for (int i = 0; i < ndException.getLength(); i++) {
                    org.w3c.dom.Node node = ndException.item(i);
                    if (node.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                        testType = node.getNodeName();
                        NodeList ndInputChild = node.getChildNodes();

                        //access to child nodes of node "Input"
                        for (int j = 0; j < ndInputChild.getLength(); j++) {
                            org.w3c.dom.Node nodeInputChild = ndInputChild.item(j);
                            if (nodeInputChild.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                                org.w3c.dom.Element eElement = (org.w3c.dom.Element) nodeInputChild;

                                if (nodeInputChild.getNodeName() == "value") {
                                    extDescription = nodeInputChild.getTextContent();
                                    extID = eElement.getAttribute("ext_id");

                                    EF_description.add(extDescription);
                                    Exceptionflow.add(extID);
                                    // System.out.println("EXT ID : " + extID);
                                    // System.out.println("Description: " + extDescription);
                                    //Mainflow.add(varName);

                                }
                                if (nodeInputChild.getNodeName() == "ref") {

                                    ref_extID = eElement.getAttribute("ref_id");
                                    extREF.add(ref_extID);
                                    // System.out.println("REF: " + ref_extID);

                                }

                                if (nodeInputChild.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                                    NodeList refOutList = eElement.getElementsByTagName("flow-ref");

                                    for (int out = 0; out < refOutList.getLength(); out++) {
                                        org.w3c.dom.Node node1 = refOutList.item(out);
                                        if (node1.getNodeType() == node1.ELEMENT_NODE) {
                                            Element refOut = (Element) node1;
                                            extRef_out = refOut.getAttribute("at-step");
                                            extRefOut.add(extRef_out);
                                            //System.out.println("REF OUT: " + extRef_out);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            System.out.print("Mainflow : " + Mainflow);
            System.out.println();
            System.out.print("MF_description : " + MF_description);
            System.out.println();
            System.out.print("Exceptionflow : " + Exceptionflow);
            System.out.println();
            System.out.print("EF_description : " + EF_description);
            System.out.println();
            System.out.print("extREF : " + extREF);
            System.out.println();
            System.out.print("extRefOut : " + extRefOut);
            System.out.println();
            System.out.print("Alternativeflow : " + Alternativeflow);
            System.out.println();
            System.out.print("AF_description : " + AF_description);
            System.out.println();
            System.out.print("altREF : " + altREF);
            System.out.println();
            System.out.print("altRefIN : " + altRefIN);
            System.out.println();
            System.out.print("altRefOut : " + altRefOut);
            System.out.println();

            SingleGraph graph = new SingleGraph("ControlFlowGraph", false, true);

            //graph.setStrict(true);
            //graph.setAutoCreate(false);
            for (int a = 0; a < Mainflow.size(); a++) {
                graph.addNode((String) Mainflow.get(a));

                Node e1 = graph.getNode("" + Mainflow.get(a));

                e1.addAttribute("ui.style", "fill-color: gray;size: 40px;"); //ตั้งค่าสีและขนาดของ node
                e1.addAttribute("ui.label", "" + Mainflow.get(a) + " (" + MF_description.get(a) + ")");  //ตั้งชื่อ node

                e1.addAttribute("layout.frozen");
                e1.addAttribute("xy", 0, -a);   //กำหนดตำแหน่ง node 

            }

            for (int be = 0; be < Exceptionflow.size(); be++) {
                graph.addNode((String) Exceptionflow.get(be));

                Node e1 = graph.getNode("" + Exceptionflow.get(be));
                e1.addAttribute("ui.style", "fill-color: gray;size: 40px;");  //ตั้งค่าสีและขนาดของ node
                e1.addAttribute("ui.label", "" + Exceptionflow.get(be) + " (" + EF_description.get(be) + ")");
                e1.addAttribute("layout.frozen");
                e1.addAttribute("xy", 1.5, -be - 2);   //กำหนดตำแหน่ง node
            }

            for (int n = 0; n < Alternativeflow.size(); n++) {
                graph.addNode((String) Alternativeflow.get(n));

                Node e1 = graph.getNode("" + Alternativeflow.get(n));
                e1.addAttribute("ui.style", "fill-color: gray;size: 40px;");  //ตั้งค่าสีและขนาดของ node
                e1.addAttribute("ui.label", "" + Alternativeflow.get(n) + " (" + AF_description.get(n) + ")");
                e1.addAttribute("layout.frozen");
                e1.addAttribute("xy", -1.5, -n - 2);  //กำหนดตำแหน่ง node

            }

            for (int mf = 0;
                    mf < Mainflow.size();
                    mf++) {
                if (mf < Mainflow.size() - 1) {

                    graph.addEdge(Mainflow.get(mf) + "" + Mainflow.get(mf + 1) + "", "" + Mainflow.get(mf) + "", "" + Mainflow.get(mf + 1), true);   //ใส่ true เพื่อให้มีหัวลูกศร  

                }

            } //สร้างกราฟ Main flow

            for (int ef = 0; ef < Exceptionflow.size(); ef++) {
                if (ef < Exceptionflow.size() - 1) {
                    graph.addEdge(Exceptionflow.get(ef) + "", "" + Exceptionflow.get(ef) + "", "" + Exceptionflow.get(ef), true);   //ใส่ true เพื่อให้มีหัวลูกศร  

                }

            } //สร้างกราฟ Exception flow

            for (int af = 0; af < Alternativeflow.size(); af++) {
                if (af < Alternativeflow.size() - 1) {
                    graph.addEdge(Alternativeflow.get(af) + "", "" + Alternativeflow.get(af) + "", "" + Alternativeflow.get(af), true);   //ใส่ true เพื่อให้มีหัวลูกศร  

                }

            } //สร้างกราฟ Alternative flow

            for (int afRef = 0; afRef < altREF.size(); afRef++) {

                graph.addEdge(altRefOut.get(afRef) + "" + altREF.get(afRef) + "", "" + altRefOut.get(afRef) + "", "" + altREF.get(afRef), true);   // จับคู่ main flow กับ alternative flow 
                graph.addEdge(altREF.get(afRef) + "" + altRefIN.get(afRef) + "", "" + altREF.get(afRef) + "", "" + altRefIN.get(afRef), true);     // จับคู่ alternative flow กับ main flow

            } //เชื่อมกราฟ main flow กับ alternativeflow

            for (int efRef = 0; efRef < extREF.size(); efRef++) {

                graph.addEdge(altRefOut.get(efRef) + "" + extREF.get(efRef) + "", "" + altRefOut.get(efRef) + "", "" + extREF.get(efRef), true);   // จับคู่ main flow กับ alternative flow 
                // graph.addEdge(altREF.get(afRef) + "" + altRefIN.get(afRef) + "", "" + altREF.get(afRef) + "", "" + altRefIN.get(afRef), true);     // จับคู่ alternative flow กับ main flow

            } //เชื่อมกราฟ main flow กับ exceptionflow
            /*
        graph.addEdge("Usecase", "Usecase", "No card", true);               // จับคู่ main flow กับ exception flow
        graph.addEdge("UsecaseNo card1", "Usecase", "No card1", true);      // จับคู่ main flow กับ alternative flow      
        graph.addEdge("No card1", "No card1", "Price > 1000", true);        // จับคู่ alternative flow กับ main flow */

            //graph.display(false);  //ตั้ง false เพื่อให้ไม่กราฟเคลื่อนที่
            /*Viewer viewer = graph.display(false);
            
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
            graph.addAttribute("ui.screenshot", "C:/Users/5730213082/Desktop/graph.png");*/
            Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);

            // viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
            viewer.enableAutoLayout();
            ViewPanel viewPanel = viewer.addDefaultView(false);
            //jPanel19.setPreferredSize(new Dimension(20, 15));

            jPanel19.setLayout(new BorderLayout());

            jPanel19.removeAll();
            jPanel19.add(viewPanel, BorderLayout.CENTER);
            jPanel19.validate();
            // jPanel19.repaint();

            //viewer.addDefaultView(true);
        }
    }//GEN-LAST:event_btn_6MousePressed

    private void btn_7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_7MousePressed
        // TODO add your handling code here:
        if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {
            try {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (InstantiationException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (IllegalAccessException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            if (RandomMatch.size() == 0) {
                JOptionPane.showMessageDialog(null,
                        "กรุณาสร้างการแบ่งชั้นสมมูล",
                        "กรุณาสร้างข้อมูลทดสอบ",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                if (jTable2.getRowCount() < 1) {

                    createTable_Matrix();
                }

                setColor(btn_7);
                ind_7.setOpaque(true);
                resetColor(new JPanel[]{btn_1, btn_3, btn_4, btn_2, btn_6, btn_8}, new JPanel[]{ind_1, ind_3, ind_4, ind_2, ind_6, ind_8});
                basicPanel.removeAll();
                basicPanel.repaint();
                basicPanel.validate();
                basicPanel.add(jPanel15);
                basicPanel.repaint();
                basicPanel.validate();

            }
        }
    }//GEN-LAST:event_btn_7MousePressed

    private void btn_8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_8MousePressed
        // TODO add your handling code here:
        if (jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField2.getText().equals("")) {
            try {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (InstantiationException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (IllegalAccessException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(Home.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null,
                    "กรุณาเลือกไฟล์ให้ถูกต้อง",
                    "กรุณาเลือกไฟล์",
                    JOptionPane.ERROR_MESSAGE);

        } else {
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            //int rowCount = model.getRowCount();
            //Remove rows one by one from the end of the table

            Scenarios_for_UC scenariosUC = new Scenarios_for_UC();

            scenariosUC.ScenariosForUC();
            scenariosUC.ReadXML();

            if (jTable3.getRowCount() < 1) {
                createTable_scenariosUC();
            }

            setColor(btn_8);
            ind_8.setOpaque(true);
            resetColor(new JPanel[]{btn_1, btn_3, btn_4, btn_2, btn_6, btn_7}, new JPanel[]{ind_1, ind_3, ind_4, ind_2, ind_6, ind_7});
            basicPanel.removeAll();
            basicPanel.repaint();
            basicPanel.validate();
            basicPanel.add(jPanel17);
            basicPanel.repaint();
            basicPanel.validate();

        }
    }//GEN-LAST:event_btn_8MousePressed

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        ControlFlowGraph graph = new ControlFlowGraph();
        graph.ControlFG();

    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        ControlFlowGraph graph = new ControlFlowGraph();
        graph.ControlFG();

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        Testcase testcase = new Testcase();
        testcase.Read();
        testcase.exportExcelFile();

    }//GEN-LAST:event_jLabel26MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:

        JFileChooser savefile = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("png", "png");

        savefile.setFileFilter(filter);

        int returnVal = savefile.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            try {

                // FileWriter fw = new FileWriter(filter+".xls");
                //FileWriter fw;
                //fw = new FileWriter(savefile.getSelectedFile() + ".xls");
                String fileName = savefile.getSelectedFile() + ".jpg".toString();

                //** Merge Cell ***//*
                // ws1.mergeCells(0, 4, 1, 4); // Merge col[0-1] and row[4]
                //  Label lable = new Label(0, 4,"ThaiCreate.Com", cellFormat2);
                //  ws1.addCell(lable);
                System.out.println("Image file created.");
                JOptionPane.showMessageDialog(null, "Save succeed\n" + fileName);
                /*final ImageIcon icon = new ImageIcon(getClass().getResource("icon.ico"));
                JOptionPane.showMessageDialog(null,
                        "Eggs are not supposed to be green.",
                        "Inane custom dialog",
                        JOptionPane.INFORMATION_MESSAGE,
                
                        icon);*/

                //fw.close();
                BufferedImage img = new BufferedImage(TxtArea_Partition.getWidth(), TxtArea_Partition.getHeight(), BufferedImage.TYPE_INT_RGB);
                Graphics2D g2d = img.createGraphics();
                jPanel19.printAll(g2d);
                g2d.dispose();

                try {
                    ImageIO.write(img, "png", new File(fileName));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } catch (Exception ex) {
                int n = JOptionPane.showConfirmDialog(
                        null,
                        "Excel file error you want to save?",
                        "Error",
                        JOptionPane.YES_NO_OPTION);

                /*JOptionPane.showMessageDialog(null,
                    "File not save",
                    "Error",
                    JOptionPane.ERROR_MESSAGE );*/
                ex.printStackTrace();
            }

        }

    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        if (Testcase.size() == 0) {
            JOptionPane.showMessageDialog(null,
                    "กรุณาทำการจับคู่ความสัมพันธ์โดยการสร้างข้อมูลทดสอบ"
                    + "\nไปที่ Generate Tescase > Match Test Scenario",
                    "กรุณาทำการจับคู่ความสัมพันธ์",
                    JOptionPane.ERROR_MESSAGE);

        } else {
            ExcelWrite excel = new ExcelWrite();
            excel.excel();
        }
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:

        setColor(btn_8);
        ind_8.setOpaque(true);
        resetColor(new JPanel[]{btn_1, btn_3, btn_4, btn_2, btn_6, btn_7}, new JPanel[]{ind_1, ind_3, ind_4, ind_2, ind_6, ind_7});
        basicPanel.removeAll();
        basicPanel.repaint();
        basicPanel.validate();
        basicPanel.add(jPanel17);
        basicPanel.repaint();
        basicPanel.validate();

        if (Testcase.size() == 0) {
            Testcase.add("Testcase 1-6");
            Testcase.add("Testcase 1-6");
            Testcase.add("Testcase 7-9");
        }

        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setValueAt(Testcase.get(0), 0, 3);
        model.setValueAt(Testcase.get(1), 1, 3);
        model.setValueAt(Testcase.get(2), 2, 3);
    }//GEN-LAST:event_jLabel30MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Home.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (InstantiationException ex) {
                    Logger.getLogger(Home.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Home.class
                            .getName()).log(Level.SEVERE, null, ex);

                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Home.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
                new Home().setVisible(true);
            }
        });
    }

    private void setColor(JPanel pane) {
        pane.setBackground(new Color(41, 57, 80));
    }

    private void resetColor(JPanel[] pane, JPanel[] indicators) {
        for (int i = 0; i < pane.length; i++) {
            pane[i].setBackground(new Color(23, 35, 51));

        }
        for (int i = 0; i < indicators.length; i++) {
            indicators[i].setOpaque(false);
        }

    }

    public String getFileLocationData() {
        return FileLocationData;

    }

    public String getFileLocationDis() {
        return FileLocationDis;

    }

    public String getFileLocationCFG() {
        return FileLocationCFG;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TxtArea_Partition;
    private javax.swing.JPanel basicPanel;
    private javax.swing.JPanel btn_1;
    private javax.swing.JPanel btn_2;
    private javax.swing.JPanel btn_3;
    private javax.swing.JPanel btn_4;
    private javax.swing.JPanel btn_6;
    private javax.swing.JPanel btn_7;
    private javax.swing.JPanel btn_8;
    private javax.swing.JPanel ind_1;
    private javax.swing.JPanel ind_2;
    private javax.swing.JPanel ind_3;
    private javax.swing.JPanel ind_4;
    private javax.swing.JPanel ind_6;
    private javax.swing.JPanel ind_7;
    private javax.swing.JPanel ind_8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel matrixSupport;
    private javax.swing.JPanel side_pane;
    // End of variables declaration//GEN-END:variables
}
